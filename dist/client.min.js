!function e(n,t,r){function i(s,l){if(!t[s]){if(!n[s]){var a="function"==typeof require&&require;if(!l&&a)return a(s,!0);if(o)return o(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var d=t[s]={exports:{}};n[s][0].call(d.exports,function(e){var t=n[s][1][e];return i(t||e)},d,d.exports,e,n,t,r)}return t[s].exports}for(var o="function"==typeof require&&require,s=0;s<r.length;s++)i(r[s]);return i}({1:[function(e){ripple(e("./"))},{"./":2}],2:[function(e,n){n.exports={"ux-input.css":{name:"ux-input.css",body:":host {\r\n  outline: none;\r\n  height: 3em;\r\n  box-sizing: border-box;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  position: relative;\r\n  display: inline-block; \r\n  vertical-align: text-bottom; }\r\n\r\n:host * {\r\n  box-sizing: border-box; } \r\n\r\n:host(.is-multiline) {\r\n  height: 150px; }\r\n\r\n:host(.is-hidden) {\r\n  display: none; }\r\n\r\n:host(.is-disabled) {\r\n  cursor: not-allowed; }\r\n\r\n  .textfield {\r\n    overflow: hidden;\r\n    line-height: 1em;\r\n    background-color: white;\r\n    text-align: left;\r\n    padding: 0.875em .85em;\r\n    height: inherit;\r\n    font-size: 1em;\r\n    font-family: inherit;\r\n    font-weight: inherit;\r\n    outline: none;\r\n    border: 1px solid #dfdfdf;\r\n    width: 100%;\r\n    color: #444;\r\n    display: block;\r\n    cursor: inherit;\r\n    border-radius: 3px;\r\n    transition: all 0.2s ease-in-out; }\r\n\r\n  .textfield:focus {\r\n    border-color: var(--ux-input-primary, #298eea); }\r\n\r\n  :host(.is-disabled) .textfield {\r\n    background: rgb(235, 235, 228); }\r\n\r\n  :host(:not(.is-multiline)) .textfield {\r\n    white-space: nowrap; }\r\n\r\n  :host(.is-multiline) .textfield {\r\n    word-break: break-all; }\r\n\r\n  :host(.is-active) .textfield {\r\n    padding: 1.3em 0.85em 0.45em 0.85em; }\r\n\r\n  :host(:not(.is-active)) div.textfield::before {\r\n    position: absolute;\r\n    display: inline-block;\r\n    margin-top: 2px;\r\n    content: attr(placeholder);  \r\n    opacity: 0.6; }\r\n\r\n  label {\r\n    position: absolute;\r\n    top: 6px;\r\n    padding: 0;\r\n    left: 1.3em;\r\n    font-size: 0.7em;\r\n    font-weight: 500;\r\n    color: #bbbbbb;\r\n    display: block;\r\n    opacity: 0;\r\n    /*z-index: 10;*/\r\n    cursor: inherit;\r\n    transition: all 0.2s ease-in-out; }\r\n  \r\n  :host(.is-focused) label {\r\n    color: #298eea; }\r\n\r\n  :host(.is-active) label {\r\n    opacity: 1 }\r\n\r\n  :host(.is-optional)::after {\r\n    position: absolute;\r\n    right: 1em;\r\n    top: 0.3em;\r\n    font-size: 0.6em;\r\n    color: #ccc;\r\n    content: 'optional'; }"},"ux-input":{name:"ux-input",body:e("./ux-input.js").default||e("./ux-input.js"),headers:{needs:"[css]"}}}},{"./ux-input.js":3}],3:[function(e,n,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,n){function t(){n.focused||r(".textfield").node().focus()}var r=once(e),i=e.host||e,o=defaults(n,"type","text"),s=defaults(n,"value",n.default||""),l=defaults(n,"min",!1),a=defaults(n,"max",!1),u=defaults(n,"focused",!1),d=defaults(n,"optional",!1),f=defaults(n,"disabled",!1),c=defaults(n,"autofocus",!1),p=defaults(n,"required",!1),b=defaults(n,"multiline",!1),h=defaults(n,"placeholder",""),x=b?"textContent":"value",m=b?'.textfield[contenteditable="true"]':'input.textfield[type="'+o+'"]';r.attr("tabindex","0").classed("is-optional",d).classed("is-focused",u).classed("is-disabled",f).classed("is-multiline",b).classed("is-active",s).property("value",s).on("focus.refocus",t),r(m,1).property("value",s).attr("tabindex",-1).attr("min",l).attr("max",a).attr("disabled",f).attr("required",p).attr("autofocus",c).attr("placeholder",h).on("input.value",function(){r.emit("change",n.value=this[x]).draw()}).on("keydown.submit",function(e,n,t,i){b||"Enter"==i.key&&(i.preventDefault(),r.closest("form").emit("submit"))}).on("focus.focused",function(){n.focused||(n.focused=!0,r.draw())}).on("blur.focused",function(e,o,s,l){if(n.focused){if(l.relatedTarget==i)return t(n.focused=!1);n.focused=!1,r.emit("blur").draw()}}).text(s),r("label",1).text(h)}},{}]},{},[1]);